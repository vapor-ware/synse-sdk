#!/usr/bin/env groovy

pipeline {

  agent any

  environment {
    PROJ_PATH = '/go/src/github.com/vapor-ware/synse-sdk'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Test') {
      environment {
        CODECOV_TOKEN = credentials('codecov-token')
      }
      steps {
        script {
          docker.image('vaporio/jenkins-agent-golang:latest').inside('-v $WORKSPACE:$PROJ_PATH -e CODECOV_TOKEN=$CODECOV_TOKEN') {
            // All the deps to build this project are provided by the runtime container
            // Skip the configuration management and let the pipeline assets do that for you.
            sh 'cd ${PROJ_PATH} && dep ensure'
            sh 'cd ${PROJ_PATH} && CGO_ENABLED=0 go test -coverprofile=coverage.txt -covermode=atomic ./sdk/...'
            sh 'cd ${PROJ_PATH} && curl -s https://codecov.io/bash | bash -s - -t ${CODECOV_TOKEN}'
          }
        }
      }
    }

    stage('Build') {
      steps {
        script {
          docker.image('vaporio/jenkins-agent-golang:latest').inside('-v $WORKSPACE:$PROJ_PATH') {
            // All the deps to build this project are provided by the runtime container
            // Skip the configuration management and let the pipeline assets do that for you.
            sh 'cd ${PROJ_PATH} && make build examples check-examples'
          }
        }
      }
    }

    stage('Tagged Release') {
      when {
        // example matches: 1.2.3, 1.2.3-dev
        tag pattern: '(0|[1-9]*)\\.(0|[1-9]*)\\.(0|[1-9]*)(-(\\S*))?$', comparator: "REGEXP"
      }
      environment {
        GITHUB_TOKEN = credentials('vio-bot-gh-token')
      }
      steps {
        script {
          docker.image('vaporio/jenkins-agent-golang:latest').inside('-v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -e GITHUB_TOKEN=$GITHUB_TOKEN -v $WORKSPACE:$PROJ_PATH --group-add docker') {
            withDockerRegistry(registry: [credentialsId: 'vio-docker-hub']) {
              sh 'cd ${PROJ_PATH} && goreleaser release --rm-dist'
            }
          }
        }
      }
    }
  }
}
